{"version":3,"sources":["actions/index.js","actions/types.js","components/Register.jsx","components/Login.jsx","components/Header.jsx","components/messages/Message.jsx","components/messages/MessageList.jsx","components/Dashboard.jsx","components/messages/MessageField.js","utils/validateEmails.js","components/messages/formFields.js","components/messages/MessageForm.jsx","components/messages/MessageFormReview.jsx","components/messages/MessageNew.jsx","components/App.js","reducers/index.js","reducers/authReducer.js","reducers/messagesReducer.js","index.js"],"names":["fetchUser","dispatch","a","axios","get","res","type","payload","data","newUser","sendMessage","values","history","post","push","deleteMessage","fetchMessages","Register","class","for","id","placeholder","className","Component","connect","user","Login","this","props","Header","username","key","to","renderContent","auth","Message","message","_id","onClick","deleteItem","title","body","Date","dateSent","toLocaleDateString","React","MessageList","index","newInventory","messages","filter","messageIndex","setState","state","reverse","map","onDelete","renderMessages","Dashboard","input","label","meta","error","touched","style","marginBottom","re","name","MessageForm","_","formFields","Field","component","MessageField","onSubmit","handleSubmit","onMessageSubmit","renderFields","reduxForm","validate","errors","recipients","emails","invalidEmails","split","email","trim","test","length","validateEmails","each","form","destroyOnUnmount","formValues","actions","withRouter","onCancel","submitMessage","reviewFields","MessageNew","showFormReview","App","exact","path","combineReducers","action","surveys","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d0ff3465.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {FETCH_USER,FETCH_MESSAGES} from './types';\r\n\r\n\r\nexport const fetchUser = () => async dispatch => {\r\n    const res = await axios.get('/login');\r\n    dispatch({ type: FETCH_USER, payload:res.data});    \r\n    \r\n};\r\n\r\n\r\nexport const newUser = () => async dispatch => {\r\n    const res = await axios.get('/register');\r\n    dispatch({ type: FETCH_USER, payload:res.data});    \r\n    \r\n};\r\n\r\nexport const sendMessage = (values,history) => async dispatch =>{\r\n    const res = await axios.post('/create',values);\r\n    history.push('/create');\r\n    dispatch({type:FETCH_USER ,payload:res.data});\r\n\r\n};\r\n\r\nexport const deleteMessage = (values,history) => async dispatch =>{\r\n    const res = await axios.post('/messages',values);\r\n    history.push('/messages');\r\n    dispatch({type:FETCH_USER ,payload:res.data});\r\n\r\n};\r\n\r\nexport const fetchMessages = () => async dispatch => {\r\n    const res = await axios.get('/messages');\r\n    dispatch({type:FETCH_MESSAGES ,payload:res.data});\r\n\r\n\r\n};","export const FETCH_USER = 'fetch_user';\r\nexport const FETCH_MESSAGES = 'fetch_messages';","\r\nimport React , {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link } from 'react-router-dom';\r\nimport { newUser } from '../actions';\r\n\r\n\r\nclass Register extends Component{\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n            <form>\r\n            <div class=\"form-group\">\r\n              <label for=\"formGroupExampleInput\">User Name:</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"formGroupExampleInput\" placeholder=\"User Name\"/>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"formGroupExampleInput2\">Password:</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"formGroupExampleInput2\" placeholder=\"Paswword\"/>\r\n            </div>\r\n          </form>\r\n            <botton className=\"btn btn-primary\" type=\"submit\">Register</botton>\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps({user}){\r\n    return {user};\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps,{newUser})(Register);","\r\nimport React , {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link } from 'react-router-dom';\r\nimport { fetchUser } from '../actions';\r\n\r\n\r\n\r\nclass Login extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.fetchUser();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n            <form>\r\n            <div>\r\n              <h2 className =\".text-primary\">Login</h2>\r\n            </div>  \r\n            <div class=\"form-group\">\r\n              <label for=\"formGroupExampleInput\">User Name:</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"formGroupExampleInput\" placeholder=\"Insert User Name\"/>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"formGroupExampleInput2\">Password:</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"formGroupExampleInput2\" placeholder=\"Insert Password\"/>\r\n            </div>\r\n          </form>\r\n            <botton className=\"btn btn-primary\" type=\"submit\">login</botton>\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps({user}){\r\n    return {user};\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps,{fetchUser})(Login);","import React , {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link } from 'react-router-dom';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\n\r\nclass Header extends Component{\r\n    renderContent(){\r\n        switch(this.props.username){\r\n            case null:\r\n                return;\r\n            case false:\r\n                return [<li key = \"1\" Component = {Login} ><Link to = '/login'>Login</Link></li>,\r\n                        <li key=\"2\" Component = {Register}><Link to = '/register'>Register</Link></li>];\r\n            default:\r\n                return (<li><Link to = '/'>Logout</Link></li>);\r\n\r\n\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <Link \r\n                    to={this.props.username ? '/messages' : '/login'}\r\n                     className=\"left brand-logo\">\r\n                        Emaily\r\n                    </Link>\r\n                    <ul className=\"right\">\r\n                      {this.renderContent()}\r\n\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({auth}){\r\n    return {auth};\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\n\r\nclass Message extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"card darken-1\" key={this.props.message._id}>\r\n                <div className=\"right\">\r\n                    <button className=\"btn btn-lg btn-outline-danger ml-4\"  onClick={() => this.props.deleteItem(this.props._id)}>\r\n                        Delate\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{this.props.message.title}</span>\r\n                    <p>\r\n                        {this.props.body}\r\n                    </p>\r\n                    <p className=\"right\">\r\n                        Sent On:{new Date(this.props.message.dateSent).toLocaleDateString()}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Message;\r\n\r\n","\r\nimport React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { fetchMessages } from '../../actions';\r\nimport Message from './Message';\r\nimport {Tabs,TabLink,TabContent} from 'react-tabs-redux';\r\n\r\nclass MessageList extends Component{\r\n    componentDidMount(){\r\n        this.props.fetchMessages();\r\n    }\r\n\r\n    //state = this.props.messages;\r\n\r\n    \r\n    deleteMessage = index => {\r\n        const newInventory = this.props.messages.filter(\r\n          (message, messageIndex) => index !== messageIndex\r\n        );    return this.setState([...newInventory]);\r\n    };\r\n    \r\n    renderMessages(){\r\n        return this.state.reverse().map(message => (\r\n            < Message key = {message._id} onDelete= {this.deleteMessage} message={message}/> \r\n        ));\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Tabs className=\"nav nav-tabs\">\r\n                    <TabLink to=\"tab1\" > Send messages </TabLink>\r\n                    <TabLink to=\"tab2\" > Recieve Messages </TabLink>\r\n                    \r\n                    <TabContent for=\"tab1\" >{this.renderMessages()}</TabContent>\r\n                    <TabContent for=\"tab2\" >{this.renderMessages()}</TabContent>\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({messages}){\r\n    return {messages};\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps,{fetchMessages})(MessageList);\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport MessageList from './messages/MessageList';\r\n\r\nconst Dashboard = () => {\r\n    return(\r\n        <div>\r\n            <MessageList/>\r\n            <div className=\"fixed-action-btn\">\r\n                <Link to=\"/create\" className=\"btn-floating btn-large red\">\r\n                    <i class=\"material-icons\">add</i>\r\n                </Link>\r\n\r\n            </div>\r\n        </div>);\r\n}; \r\nexport default Dashboard; ","// contains logic to render a single label and text input\r\n\r\nimport React from 'react';\r\nexport default ({input,label,meta:{ error,touched }})=>{\r\n    return(\r\n        <div>\r\n            <label>{label}</label>\r\n            <input {...input} className=\"form-control\" style={{marginBottom: '5px'}}/>\r\n            <div className=\"red-text\" style={{marginBottom: '20ox'}}>\r\n                {touched && error}\r\n            </div>\r\n        </div>\r\n    );\r\n};","const re = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\nexport default (emails) =>{\r\n    const invalidEmails = emails\r\n        .split(',')\r\n        .map(email => email\r\n        .trim()).filter(email => re.test(email)  === false );\r\n    if (invalidEmails.length){\r\n        return `These emails are invalid: ${invalidEmails}`;\r\n    }\r\n    return null;\r\n}","export default [\r\n    {label:'Survey Title',name:'title'},\r\n    {label:'Subject Line',name:'subject'},\r\n    {label:'Email Body',name:'body'},\r\n    {label:'Recipient list',name:'recipients'}\r\n];","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {reduxForm , Field} from  'redux-form';\r\nimport MessageField from './MessageField';\r\nimport validateEmails from '../../utils/validateEmails';\r\nimport  formFields from './formFields';\r\n\r\nclass MessageForm extends Component{\r\n    renderFields(){\r\n    return _.map(formFields,({label,name}) => {\r\n        return <Field \r\n                key = {name}\r\n                component={MessageField}\r\n                type=\"text\" \r\n                label = {label} \r\n                name={name}\r\n                />\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.props.handleSubmit(this.props.onMessageSubmit)}>\r\n                    {this.renderFields()}\r\n                    <Link to=\"/messages\" className=\"red btn-flat white-text\">\r\n                        Cancel\r\n                    </Link>                    \r\n                \r\n                    <button type=\"submit\" className=\"teal btn-flat right white-text\">\r\n                        Next\r\n                        <i className=\"material-icons right\">done</i>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n       \r\n}\r\nfunction validate(values){\r\n    const errors={};\r\n    errors.recipients = validateEmails(values.recipients || '');\r\n    _.each(formFields,({name})=>{\r\n        if(!values[name]){\r\n            errors[name]='You must provide a value';\r\n        }\r\n    });\r\n    return errors;\r\n    \r\n}\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'messageForm',\r\n    destroyOnUnmount:false\r\n})(MessageForm); ","// shows users their form inputs for review\r\nimport _ from 'lodash';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport formFields from './formFields';\r\nimport {withRouter} from 'react-router-dom';\r\nimport * as actions from '../../actions';\r\n\r\nconst MessageFormReview = ({onCancel,formValues,submitMessage,history}) =>{\r\n    const reviewFields = _.map(formFields,({name,label}) => {\r\n        return(\r\n            <div key = {name}>\r\n                <label>{label}</label>\r\n                <div>\r\n                    {formValues[name]}\r\n                </div>\r\n            </div>\r\n            );\r\n    });\r\n    return(\r\n        <div>\r\n            <h5>Please confirm your entries</h5>\r\n            {reviewFields}\r\n            <button className=\"yellow darken-3 white-text btn-flat\" onClick={onCancel}>\r\n                Back\r\n            </button>\r\n            <button \r\n                onClick={() => submitMessage(formValues,history)} \r\n                className=\"green btn-flat right white-text\" \r\n            >\r\n                Send Message\r\n                <i className=\"material-icons right\">email</i>\r\n            </button>\r\n        </div>\r\n     );\r\n};\r\nfunction mapStateToProps(state){\r\n    return {formValues: state.form.MessageForm.values};\r\n}   \r\nexport default connect(mapStateToProps,actions)(withRouter(MessageFormReview));\r\n","import React , { Component } from 'react';\r\nimport {reduxForm} from 'redux-form';\r\nimport MessageForm from './MessageForm';\r\nimport MessageFormReview from './MessageFormReview';\r\n\r\nclass MessageNew extends Component{   \r\n    state = {showFormReview:false};\r\n    renderContent(){\r\n        if(this.state.showFormReview){\r\n            return <MessageFormReview \r\n                    onCancel={() => this.setState({showFormReview:false})}/>;\r\n        }\r\n        return <MessageForm \r\n                onMessageSubmit = {() => this.setState({showFormReview:true})}\r\n                />\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.renderContent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default reduxForm({\r\n    form:'MessageForm'\r\n}) (MessageNew); \r\n","import React,{Component} from 'react';\nimport { BrowserRouter , Route } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport Header from './Header';\nimport Dashboard from './Dashboard';\nimport MessageNew from './messages/MessageNew';\nimport Login from './Login';\n\n\nclass App extends Component {\n    componentDidMount(){\n        this.props.fetchUser();\n\n    }\n    render() {\n        return (\n            <div>\n                <BrowserRouter>\n                    <div className=\"container\">\n                        <Header/>\n                        <Route exact path='/login' component = {Login}/>\n                        <Route exact path='/messages' component = {Dashboard}/>\n                        <Route exact path='/create' component = {MessageNew}/>\n\n                    </div>\n                </BrowserRouter>\n            </div>\n        );\n    };\n};\n\nexport default connect(null,actions)(App);","import {combineReducers} from 'redux';\r\nimport {reducer as reduxForm} from 'redux-form';\r\nimport authReducer from './authReducer';\r\nimport messagesReducer from './messagesReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    form: reduxForm,\r\n    surveys:messagesReducer\r\n});","import {FETCH_USER} from '../actions/types';\r\n\r\nexport default function(state = null, action){\r\n    switch(action.type){\r\n        case FETCH_USER:\r\n            return action.payload || false;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {FETCH_MESSAGES} from '../actions/types';\r\n\r\nexport default function(state=[],action){\r\n    switch(action.type){\r\n        case FETCH_MESSAGES:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import 'materialize-css/dist/css/materialize.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore , applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n\n\nconst store = createStore (reducers,{},applyMiddleware(reduxThunk));\n\nReactDOM.render(\n    <Provider store = {store}><App/></Provider>,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}